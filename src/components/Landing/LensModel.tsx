/* eslint-disable no-unused-vars */
import { useGLTF, useScroll } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';
import { gsap } from 'gsap';
import { useLayoutEffect, useRef } from 'react';
import * as THREE from 'three';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
    nodes: {
        Object_2: THREE.Mesh;
        Object_3: THREE.Mesh;
        Object_4: THREE.Mesh;
    };
    materials: {
        blinn1SG: THREE.MeshStandardMaterial;
        blinn2SG: THREE.MeshStandardMaterial;
    };
};

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.10 lens-transformed.glb --transform 
Files: lens-transformed.glb [58.85KB] > lens-transformed-transformed.glb [57.44KB] (2%)
*/

/*
3D Model by Karan Sahu (https://sketchfab.com/cgkaran)
It can be found here: https://sketchfab.com/3d-models/dslr-camera-lens-60bfdc6a3c884b91ae4f8ebd3f750a88

*/
const LensModel = ({ ...props }: JSX.IntrinsicElements['group']) => {
    const { nodes, materials } = useGLTF(
        '/lensfinal-transformed.glb'
    ) as GLTFResult;
    const scroll = useScroll();
    const lens = useRef<THREE.Group>(null);
    const tl = useRef<gsap.core.Timeline | null>(null);

    // eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars
    useFrame((_state, _delta) => {
        if (tl.current) {
            tl.current.seek(scroll.offset * tl.current.duration());
        }
    });

    useLayoutEffect(() => {
        tl.current = gsap.timeline({
            defaults: { duration: 0.5, ease: 'power1.inOut' },
        });

        if (lens.current) {
            tl.current
                .to(lens.current.rotation, { y: -1.2, x: -1.2 }, 0)
                .to(lens.current.position, { x: 3, y: 0 }, 0)

                .to(lens.current.rotation, { x: 0, y: 1.5 }, 0.8)
                .to(lens.current.position, { x: -3.5, y: 0 }, 0.8)

                .to(lens.current.rotation, { y: 0 }, 2)
                .to(lens.current.rotation, { x: -1 }, 2)
                .to(lens.current.position, { x: 0, y: -1.5 }, 2);
        }
    }, []);

    return (
        <group {...props} dispose={null} ref={lens}>
            <mesh
                geometry={nodes.Object_2.geometry}
                material={materials.blinn1SG}
                position={[-0.014, -1.835, -0.181]}
                rotation={[-Math.PI / 2, 0, 0]}
                scale={0.901}
            />
            <mesh
                geometry={nodes.Object_4.geometry}
                material={materials.blinn2SG}
                position={[-0.014, -1.835, -0.181]}
                rotation={[-Math.PI / 2, 0, 0]}
                scale={0.901}
            />
        </group>
    );
};

export default LensModel;

useGLTF.preload('/lensfinal-transformed.glb');
